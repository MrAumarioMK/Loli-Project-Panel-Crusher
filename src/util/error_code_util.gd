class_name ErrorCodeUtil extends Object


const enum_name = {
	OK: "OK",
	FAILED: "FAILED",
	ERR_UNAVAILABLE: "ERR_UNAVAILABLE",
	ERR_UNCONFIGURED: "ERR_UNCONFIGURED",
	ERR_UNAUTHORIZED: "ERR_UNAUTHORIZED",
	ERR_PARAMETER_RANGE_ERROR: "ERR_PARAMETER_RANGE_ERROR",
	ERR_OUT_OF_MEMORY: "ERR_OUT_OF_MEMORY",
	ERR_FILE_NOT_FOUND: "ERR_FILE_NOT_FOUND",
	ERR_FILE_BAD_DRIVE: "ERR_FILE_BAD_DRIVE",
	ERR_FILE_BAD_PATH: "ERR_FILE_BAD_PATH",
	ERR_FILE_NO_PERMISSION: "ERR_FILE_NO_PERMISSION",
	ERR_FILE_ALREADY_IN_USE: "ERR_FILE_ALREADY_IN_USE",
	ERR_FILE_CANT_OPEN: "ERR_FILE_CANT_OPEN",
	ERR_FILE_CANT_WRITE: "ERR_FILE_CANT_WRITE",
	ERR_FILE_CANT_READ: "ERR_FILE_CANT_READ",
	ERR_FILE_UNRECOGNIZED: "ERR_FILE_UNRECOGNIZED",
	ERR_FILE_CORRUPT: "ERR_FILE_CORRUPT",
	ERR_FILE_MISSING_DEPENDENCIES: "ERR_FILE_MISSING_DEPENDENCIES",
	ERR_FILE_EOF: "ERR_FILE_EOF",
	ERR_CANT_OPEN: "ERR_CANT_OPEN",
	ERR_CANT_CREATE: "ERR_CANT_CREATE",
	ERR_QUERY_FAILED: "ERR_QUERY_FAILED",
	ERR_ALREADY_IN_USE: "ERR_ALREADY_IN_USE",
	ERR_LOCKED: "ERR_LOCKED",
	ERR_TIMEOUT: "ERR_TIMEOUT",
	ERR_CANT_CONNECT: "ERR_CANT_CONNECT",
	ERR_CANT_RESOLVE: "ERR_CANT_RESOLVE",
	ERR_CONNECTION_ERROR: "ERR_CONNECTION_ERROR",
	ERR_CANT_ACQUIRE_RESOURCE: "ERR_CANT_ACQUIRE_RESOURCE",
	ERR_CANT_FORK: "ERR_CANT_FORK",
	ERR_INVALID_DATA: "ERR_INVALID_DATA",
	ERR_INVALID_PARAMETER: "ERR_INVALID_PARAMETER",
	ERR_ALREADY_EXISTS: "ERR_ALREADY_EXISTS",
	ERR_DOES_NOT_EXIST: "ERR_DOES_NOT_EXIST",
	ERR_DATABASE_CANT_READ: "ERR_DATABASE_CANT_READ",
	ERR_DATABASE_CANT_WRITE: "ERR_DATABASE_CANT_WRITE",
	ERR_COMPILATION_FAILED: "ERR_COMPILATION_FAILED",
	ERR_METHOD_NOT_FOUND: "ERR_METHOD_NOT_FOUND",
	ERR_LINK_FAILED: "ERR_LINK_FAILED",
	ERR_SCRIPT_FAILED: "ERR_SCRIPT_FAILED",
	ERR_CYCLIC_LINK: "ERR_CYCLIC_LINK",
	ERR_INVALID_DECLARATION: "ERR_INVALID_DECLARATION",
	ERR_DUPLICATE_SYMBOL: "ERR_DUPLICATE_SYMBOL",
	ERR_PARSE_ERROR: "ERR_PARSE_ERROR",
	ERR_BUSY: "ERR_BUSY",
	ERR_SKIP: "ERR_SKIP",
	ERR_HELP: "ERR_HELP",
	ERR_BUG: "ERR_BUG",
	ERR_PRINTER_ON_FIRE: "ERR_PRINTER_ON_FIRE",
}


const detail = {
	OK: "OK",
	FAILED: "Generic error",
	ERR_UNAVAILABLE: "Unavailable error",
	ERR_UNCONFIGURED: "Unconfigured error",
	ERR_UNAUTHORIZED: "Unauthorized error",
	ERR_PARAMETER_RANGE_ERROR: "Parameter range error",
	ERR_OUT_OF_MEMORY: "Out of memory (OOM) error",
	ERR_FILE_NOT_FOUND: "File: Not found error",
	ERR_FILE_BAD_DRIVE: "File: Bad drive error",
	ERR_FILE_BAD_PATH: "File: Bad path error",
	ERR_FILE_NO_PERMISSION: "File: No permission error",
	ERR_FILE_ALREADY_IN_USE: "File: Already in use error",
	ERR_FILE_CANT_OPEN: "File: Can't open error",
	ERR_FILE_CANT_WRITE: "File: Can't write error",
	ERR_FILE_CANT_READ: "File: Can't read error",
	ERR_FILE_UNRECOGNIZED: "File: Unrecognized error",
	ERR_FILE_CORRUPT: "File: Corrupt error",
	ERR_FILE_MISSING_DEPENDENCIES: "File: Missing dependencies error",
	ERR_FILE_EOF: "File: End of file (EOF) error",
	ERR_CANT_OPEN: "Can't open error",
	ERR_CANT_CREATE: "Can't create error",
	ERR_QUERY_FAILED: "Query failed error",
	ERR_ALREADY_IN_USE: "Already in use error",
	ERR_LOCKED: "Locked error",
	ERR_TIMEOUT: "Timeout error",
	ERR_CANT_CONNECT: "Can't connect error",
	ERR_CANT_RESOLVE: "Can't resolve error",
	ERR_CONNECTION_ERROR: "Connection error",
	ERR_CANT_ACQUIRE_RESOURCE: "Can't acquire resource error",
	ERR_CANT_FORK: "Can't fork process error",
	ERR_INVALID_DATA: "Invalid data error",
	ERR_INVALID_PARAMETER: "Invalid parameter error",
	ERR_ALREADY_EXISTS: "Already exists error",
	ERR_DOES_NOT_EXIST: "Does not exist error",
	ERR_DATABASE_CANT_READ: "Database: Read error",
	ERR_DATABASE_CANT_WRITE: "Database: Write error",
	ERR_COMPILATION_FAILED: "Compilation failed error",
	ERR_METHOD_NOT_FOUND: "Method not found error",
	ERR_LINK_FAILED: "Linking failed error",
	ERR_SCRIPT_FAILED: "Script failed error",
	ERR_CYCLIC_LINK: "Cycling link (import cycle) error.",
	ERR_INVALID_DECLARATION: "Invalid declaration error",
	ERR_DUPLICATE_SYMBOL: "Duplicate symbol error",
	ERR_PARSE_ERROR: "Parse error",
	ERR_BUSY: "Busy Error",
	ERR_SKIP: "Skip Error",
	ERR_HELP: "Help Error",
	ERR_BUG: "Bug error",
	ERR_PRINTER_ON_FIRE: "Printer on fire error",
}


static func get_enum_name(err_code: int) -> String:
	return enum_name[err_code]


static func get_detail(err_code: int) -> String:
	return detail[err_code]
